/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Assignment1;

import java.awt.HeadlessException;
import java.sql.*;
import java.awt.Image;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author senju
 */
public class dashb extends javax.swing.JFrame {

    /**
     * Creates new form dashb
     */
    String imgpath;
    Connection conn;
    DefaultTableModel model;
    Date dt = null;
    int id;

    public dashb() {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        conn = Img_Date_DBs.getConnection();
        Img_Date_DBs.createInfoTable();

        try {
            String query = "SELECT Id, ImgPath, Date FROM Info";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            // Loop through the ResultSet and add rows to the model
            while (rs.next()) {
                int iD = rs.getInt("Id");
                String img = rs.getString("ImgPath");
                String d = rs.getString("Date");
                model.addRow(new Object[]{iD, img, d});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Invalid", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }

    public void clear() {
        dateChooser.setDate(null);
        imgholder.setIcon(null);
        displayID.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        imgholder = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayID = new javax.swing.JTextArea();

        fc.setAcceptAllFileFilterUsed(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dash Board");
        setPreferredSize(new java.awt.Dimension(720, 517));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(720, 517));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Log-out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        imgholder.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(imgholder, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 110, 110));

        jButton2.setText("Upload Img");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 2);
        flowLayout1.setAlignOnBaseline(true);
        jPanel2.setLayout(flowLayout1);

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel2.add(delete);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 260, 40));

        dateChooser.setBackground(new java.awt.Color(255, 255, 255));
        dateChooser.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(dateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 170, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Image Path", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 670, 230));

        displayID.setEditable(false);
        displayID.setBackground(new java.awt.Color(255, 255, 255));
        displayID.setColumns(20);
        displayID.setLineWrap(true);
        displayID.setTabSize(0);
        displayID.setEnabled(false);
        displayID.setMinimumSize(new java.awt.Dimension(82, 22));
        displayID.setPreferredSize(new java.awt.Dimension(82, 22));
        jScrollPane1.setViewportView(displayID);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 130, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int res = JOptionPane.showConfirmDialog(this, "Are you sure you want to log out?", "Message", JOptionPane.YES_NO_OPTION);
        if (res == 0) {
            LoginForm login = new LoginForm();
            login.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.image", "jpg", "png");
        fc.setCurrentDirectory(new File("C:\\Users\\senju\\Documents\\NetBeansProjects\\EDP\\src\\Img"));
        fc.addChoosableFileFilter(filter);

        int rslt = fc.showOpenDialog(jPanel1);
        if (rslt == JFileChooser.APPROVE_OPTION) {
            File selectedfile = fc.getSelectedFile();
            imgpath = selectedfile.getAbsolutePath();
            ImageIcon newImage = new ImageIcon(imgpath);
            Image image = newImage.getImage();
            Image myImage = image.getScaledInstance(imgholder.getWidth(), imgholder.getHeight(), Image.SCALE_SMOOTH);
            newImage = new ImageIcon(myImage);
            imgholder.setIcon(newImage);
            System.out.println("Image Uploaded");
        } else {
            System.out.println("No File Selected");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Random random = new Random();
        id = 10000 + random.nextInt(90000);
        String date = ((JTextField) dateChooser.getDateEditor().getUiComponent()).getText();

        //database
        try {
            //Adding the data to database
            PreparedStatement ps = conn.prepareStatement("INSERT INTO Info(Id, ImgPath, Date)VALUES(?,?,?)");
            ps.setInt(1, id);
            ps.setString(2, imgpath);
            ps.setString(3, date);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Success", "Successfully Added", JOptionPane.INFORMATION_MESSAGE);
            clear();

        } catch (HeadlessException | SQLException e) {
            System.out.println(e);
            //JOptionPane.showMessageDialog(this, "Invalid Input", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        //
        model.addRow(new Object[]{id, imgpath, date});


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String date = ((JTextField) dateChooser.getDateEditor().getUiComponent()).getText();
        PreparedStatement ps;

        int row = table.getSelectedRow();
        id = (int) model.getValueAt(row, 0); // Assuming ID is an integer
        String strID = String.valueOf(id);

        try {
            ps = conn.prepareStatement("UPDATE Info SET ImgPath = ?, Date = ? WHERE Id = ?");

            ps.setString(1, imgpath);
            ps.setString(2, date);
            ps.setInt(3, id);

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Update Successfully", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(dashb.class.getName()).log(Level.SEVERE, null, ex);
        }

        model.setValueAt(strID, row, 0);
        model.setValueAt(imgpath, row, 1);
        model.setValueAt(date, row, 2);
        clear();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:

        int row = table.getSelectedRow();

        id = (int) model.getValueAt(row, 0);
        String strID = String.valueOf(id);

        imgpath = model.getValueAt(row, 1).toString();
        ImageIcon newImage = new ImageIcon(imgpath);
        Image image = newImage.getImage();
        Image myImage = image.getScaledInstance(imgholder.getWidth(), imgholder.getHeight(), Image.SCALE_SMOOTH);
        newImage = new ImageIcon(myImage);

        //dispaly
        imgholder.setIcon(newImage);
        displayID.setText(strID);

        try {
            dt = new SimpleDateFormat("yyyy-MM-dd").parse((String) model.getValueAt(row, 2));
            dateChooser.setDate(dt);
        } catch (ParseException ex) {
            Logger.getLogger(dashb.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tableMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        PreparedStatement ps;
        try {
            int row = table.getSelectedRow();
            int message = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Message", JOptionPane.YES_NO_OPTION);

            if (message == 0) {
                ps = conn.prepareStatement("DELETE FROM Info WHERE Id = ?");

                ps.setInt(1, id);

                ps.executeUpdate();
                model.removeRow(row);
                JOptionPane.showMessageDialog(null, "Deleted Successfully", "Message", JOptionPane.INFORMATION_MESSAGE);
                clear();
            }
        } catch (SQLException ex) {
            Logger.getLogger(dashb.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dashb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dashb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dashb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dashb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dashb().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton delete;
    private javax.swing.JTextArea displayID;
    private javax.swing.JFileChooser fc;
    private javax.swing.JLabel imgholder;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
